name: SYCL CI

on:
  workflow_dispatch:
  push:
    branches: [ main, 'pr/*' ]
  pull_request:
    branches: [ main ]

jobs:
  test-sycl:
    runs-on: ubuntu-latest
    container: ghcr.io/wdmapp/oneapi-dpcpp-ubuntu-20.04:20211004
    env:
      CXX: /opt/intel/oneapi/compiler/latest/linux/bin/dpcpp
      DPCPP_ROOT: /opt/intel/oneapi
      INTEL_LICENSE_FILE: /opt/intel/oneapi/compiler/latest/licensing
      LD_LIBRARY_PATH: /opt/intel/oneapi/compiler/latest/linux/lib:/opt/intel/oneapi/compiler/latest/linux/lib/x64:/opt/intel/oneapi/compiler/latest/linux/compiler/lib/intel64_lin:/opt/intel/oneapi/compiler/latest/linux/compiler/lib
      GTEST_VERSION: 1.10.0
      GTEST_ROOT: ${{ github.workspace }}/googletest
      SYCL_DEVICE_TYPE: host
      DEBIAN_FRONTEND: noninteractive
      GTENSOR_TEST_EXCLUDE: test_fft test_reductions

    steps:
    - uses: actions/checkout@v2
    - name: clinfo
      run: |
        mkdir -p /etc/OpenCL/vendors
        echo "libintelocl.so" > /etc/OpenCL/vendors/intel-cpu.icd
        clinfo
    - name: sycl-ls
      run: |
        /opt/intel/oneapi/compiler/latest/linux/bin/sycl-ls
        /opt/intel/oneapi/compiler/latest/linux/bin/sycl-ls --verbose
    - name: install googletest
      run: |
        mkdir -p ${{ env.GTEST_ROOT }}
        cd ${{ env.GTEST_ROOT }}
        wget https://github.com/google/googletest/archive/release-${{ env.GTEST_VERSION }}.tar.gz
        tar xzf release-${{ env.GTEST_VERSION }}.tar.gz
        cmake -S googletest-release-${{ env.GTEST_VERSION }} -B build -DCMAKE_INSTALL_PREFIX=${{ env.GTEST_ROOT }}
        cmake --build build -t install
      env:
        CXX: clang++-9
    - name: cmake host
      run: cmake -S . -B build-sycl-host -DGTENSOR_DEVICE=sycl -DCMAKE_BUILD_TYPE=RelWithDebInfo -DGTENSOR_BUILD_EXAMPLES=ON -DGTENSOR_DEVICE_SYCL_SELECTOR=host -DGTEST_ROOT=${{ env.GTEST_ROOT }} -DGTENSOR_ENABLE_CLIB=ON -DGTENSOR_ENABLE_BLAS=On -DGTENSOR_ENABLE_FFT=ON -DGTENSOR_TEST_DEBUG=ON
    - name: cmake host build
      run: cmake --build build-sycl-host -v
    - name: cmake debug
      run: cmake -S . -B build-sycl-debug -DGTENSOR_DEVICE=sycl -DCMAKE_BUILD_TYPE=Debug -DGTENSOR_BUILD_EXAMPLES=ON -DGTENSOR_DEVICE_SYCL_SELECTOR=host -DGTEST_ROOT=${{ env.GTEST_ROOT }} -DGTENSOR_ENABLE_CLIB=ON -DGTENSOR_ENABLE_BLAS=ON -DGTENSOR_ENABLE_FFT=ON -DGTENSOR_TEST_DEBUG=ON
    - name: cmake debug build
      run: cmake --build build-sycl-debug -v
    - name: cmake host run tests
      run: ./run-gtests.sh build-sycl-host
    - name: cmake host run daxpy
      run: ./daxpy
      working-directory: ${{ github.workspace }}/build-sycl-host/examples
    - name: cmake host run stencil1d
      run: ./stencil1d
      working-directory: ${{ github.workspace }}/build-sycl-host/examples
    - name: cmake host run mult_table
      run: ./mult_table
      working-directory: ${{ github.workspace }}/build-sycl-host/examples
    - name: GNU make setup gtensor subdir
      run: mkdir -p external/gtensor &&  cp -R ../include external/gtensor/
      working-directory: ${{ github.workspace }}/examples
    - name: GNU make build
      run: make GTENSOR_DEVICE=sycl GTENSOR_DEVICE_SYCL_SELECTOR=host
      working-directory: ${{ github.workspace }}/examples
    - name: GNU make run daxpy
      run: ./daxpy
      working-directory: ${{ github.workspace }}/examples
    - name: GNU make run stencil1d
      run: ./stencil1d
      working-directory: ${{ github.workspace }}/examples
    - name: GNU make run mult_table
      run: ./mult_table
      working-directory: ${{ github.workspace }}/examples
